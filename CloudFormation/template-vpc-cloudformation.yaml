Resources:
  # Criando o meu vpc
  NovoVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.10.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
      - Key: Name
        Value: !Sub ${AWS::StackName}-VPC

# Criando internet gateway 
  NovoInternetGateway:
    Type: AWS::EC2::InternetGateway
    DependsOn: NovoVPC

# Conectando internet gateway com vpc
  NovoAttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref NovoVPC #funcao_do_Cloudformation_Referencia
      InternetGatewayId: !Ref NovoInternetGateway

# Criando subnet public
  NovaSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.10.1.0/24
      VpcId: !Ref NovoVPC
      AvailabilityZone: !Select [0, !GetAZs '' ] #funcao_busca_sempre_primeiro_da_lista_AZ_disponivel
      Tags:
      - Key: Name
        Value: !Sub ${AWS::StackName}-PublicSubnet

# subnet Private
  NovaSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.10.10.0/24
      VpcId: !Ref NovoVPC
      AvailabilityZone: !Select [1, !GetAZs '' ] #funcao_busca_sempre_segunda_da_lista_AZ_disponivel
      Tags:
      - Key: Name
        Value: !Sub ${AWS::StackName}-PrivateSubnet

# Elastic IP
  NATGatewayElasticIp:
    Type: AWS::EC2::EIP
    Properties:
      Domain: NovoVPC

# Nat Gateway
  NovoNatGateway:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NATGatewayElasticIp.AllocationId
      SubnetId: !Ref NovaSubnet1
      Tags:
      - Key: Name
        Value: !Join ['', ["NAT-", !Ref "AWS::StackName" ]]

# RouteTablePrivate
  PrivadaRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref NovoVPC
      Tags:
      - Key: Name
        Value: Private

# rotePrivate
  PrivateRoute1:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivadaRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NovoNATGateway


# RouteTablePublic
  PublicaRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref NovoVPC
      Tags:
      - Key: Name
        Value: Public

# rotePublic
  PublicateRoute1:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicaRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref NovoInternetGateway

# Associar a routetable com subnet Publica
  PublicaRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicaRouteTable
      SubnetId: !Ref NovaSubnet1

# Associar a routetable com subnet Privada
  PrivadaRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivadaRouteTable
      SubnetId: !Ref NovaSubnet2

# SecurityGroup Web
  NovoWEBSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: Webservers
      GroupDescription: Sec Group para WebServer
      VpcId: !Ref NovoVPC
      SecurityGroupIngress:
        -
          IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - 
          IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - 
          IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0

  NovoDBSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: Webservers
      GroupDescription: Sec Group para Banco de dados
      VpcId: !Ref NovoVPC
      SecurityGroupIngress:
        -
          IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - 
          IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          CidrIp: 0.0.0.0/0

# Criando Volume
  DBVolume:
    Type: AWS::EC2::Volume
    DeletionPolicy: Snapshot
    Properties:
      AvailabilityZone: !Select [0, !GetAZs '' }
      Size: 64
      Tags:
       - 
         Key: Name
         Value: data-volume
      VolumeType: gp2

  NovaDBInstance:
    Type: AWS::EC2::Instance
    Properties:
      BlockDeviceMappings:
        -
          DeviceName: "/dev/sda1"
          Ebs:
            VolumeSize: 24
            VolumeType: gp2
      InstanceType: t2.nano
      ImageId: ami-0b418580298265d6c ##definir AMI
      KeyName: aws-class-2 ##definir chave .pem
      Monitoring: true
      SecurityGroupIds:
        - !Ref NovoDBSecGroup    
      SubnetId: !Ref NovaSubnet2
      Tags:
       -
         Key: Name
         Value: !Sub ${AWS::StackName}-DB
      Volumes:
        - 
          Device: "/dev/sdc"
          VolumeId: !Ref DBVolume

  NovoElasticIp:
    Type: AWS::EC2::EIP
    Properties:
      InstanceId: !Ref NovaWEBInstance
      Domain: NovoVPC

  NovaWEBInstance:
    Type: AWS::EC2::Instance
    Properties:
      BlockDeviceMappings:
        -
          DeviceName: "/dev/sda1"
          Ebs:
            VolumeSize: 24
            VolumeType: gp2
      InstanceType: t2.nano
      ImageId: ami-0b418580298265d6c ##definir AMI
      KeyName: aws-class-2 ##definir chave .pem
      Monitoring: true
      SecurityGroupIds:
        - !Ref NovoWEBSecGroup
      SubnetId: !Ref NovaSubnet1
      Tags:
       -
         Key: Name
         Value: !Sub ${AWS::StackName}-WEB
